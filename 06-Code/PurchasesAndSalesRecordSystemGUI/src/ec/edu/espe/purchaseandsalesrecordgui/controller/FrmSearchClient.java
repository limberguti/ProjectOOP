/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.edu.espe.purchaseandsalesrecordgui.controller;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import ec.edu.espe.filemanagerlibrary.FileManager;
import ec.edu.espe.purchaseandsalesrecordgui.model.Client;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

/**
 *
 * @author Andrés López
 */
public class FrmSearchClient extends javax.swing.JFrame {

    DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel();
    DefaultTableModel tableModel = new DefaultTableModel();

    /**
     * Creates new form FrmSearch
     */
    public FrmSearchClient() {
        loadComboBoxModel();
        loadTableModel();
        initComponents();
        setLocationRelativeTo(null);
    }

    private void loadComboBoxModel() {
        ArrayList<Client> clients = new ArrayList<>();
        Gson gson = new Gson();
        String json = "";
        try {
            json = FileManager.read("data/clients.json");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(rootPane, "Error " + e.getMessage());
        }
        java.lang.reflect.Type clientType = new TypeToken<ArrayList<Client>>() {
        }.getType();
        clients = gson.fromJson(json, clientType);

        for (Client client : clients) {
            comboBoxModel.addElement(client);
        }
    }

    private void loadTableModel() {
        tableModel.addColumn("Cedula");
        tableModel.addColumn("Name");
        tableModel.addColumn("Last Name");
        tableModel.addColumn("Cellphone");
        tableModel.addColumn("Address");
        tableModel.addColumn("Email");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jlbSearchTitle = new javax.swing.JLabel();
        jlbCedula = new javax.swing.JLabel();
        btnReturn = new javax.swing.JButton();
        cmbCedula = new javax.swing.JComboBox<>();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnDeleteClient = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jlbUpdateName = new javax.swing.JLabel();
        jlbUpdateLastName = new javax.swing.JLabel();
        txtUpdateName = new javax.swing.JTextField();
        txtUpdateLastName = new javax.swing.JTextField();
        jlbUpdateCellphone = new javax.swing.JLabel();
        jlbUpdateAddress = new javax.swing.JLabel();
        jlbUpdateEmail = new javax.swing.JLabel();
        txtUpdateCellphone = new javax.swing.JTextField();
        txtUpdateAddress = new javax.swing.JTextField();
        txtUpdateEmail = new javax.swing.JTextField();
        jlbUpdateFields = new javax.swing.JLabel();
        jlbValidateEmail = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlbSearchTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/edu/espe/purchaseandsalesrecordgui/images/searchClientTitle.png"))); // NOI18N
        jlbSearchTitle.setText("Search Client");

        jlbCedula.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/edu/espe/purchaseandsalesrecordgui/images/cedula.png"))); // NOI18N
        jlbCedula.setText("Cedula: ");

        btnReturn.setText("Return");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        cmbCedula.setModel(comboBoxModel);

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jTable1.setModel(tableModel);
        jScrollPane1.setViewportView(jTable1);

        btnDeleteClient.setText("Delete");
        btnDeleteClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteClientActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jlbUpdateName.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/edu/espe/purchaseandsalesrecordgui/images/name.png"))); // NOI18N
        jlbUpdateName.setText("Name: ");

        jlbUpdateLastName.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/edu/espe/purchaseandsalesrecordgui/images/name.png"))); // NOI18N
        jlbUpdateLastName.setText("Last Name: ");

        jlbUpdateCellphone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/edu/espe/purchaseandsalesrecordgui/images/phoneNumber.png"))); // NOI18N
        jlbUpdateCellphone.setText("Cellphone: ");

        jlbUpdateAddress.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/edu/espe/purchaseandsalesrecordgui/images/address.png"))); // NOI18N
        jlbUpdateAddress.setText("Address: ");

        jlbUpdateEmail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/edu/espe/purchaseandsalesrecordgui/images/email.png"))); // NOI18N
        jlbUpdateEmail.setText("Email: ");

        jlbUpdateFields.setText("Enter the new values in each field:");

        jlbValidateEmail.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(btnUpdate)
                .addGap(139, 139, 139)
                .addComponent(btnDeleteClient)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnReturn)
                .addGap(89, 89, 89))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlbSearchTitle)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jlbCedula)
                                .addGap(48, 48, 48)
                                .addComponent(cmbCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(78, 78, 78)
                        .addComponent(btnSearch))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlbUpdateName)
                                    .addComponent(jlbUpdateLastName))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtUpdateName, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                                    .addComponent(txtUpdateLastName))
                                .addGap(33, 33, 33))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jlbUpdateFields)
                                .addGap(78, 78, 78)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jlbUpdateCellphone)
                                .addGap(18, 18, 18)
                                .addComponent(txtUpdateCellphone, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlbUpdateAddress)
                                    .addComponent(jlbUpdateEmail))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtUpdateAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                                    .addComponent(txtUpdateEmail)))
                            .addComponent(jlbValidateEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jlbSearchTitle)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbCedula)
                    .addComponent(btnSearch)
                    .addComponent(cmbCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jlbUpdateFields)
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbUpdateName)
                            .addComponent(txtUpdateName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbUpdateLastName)
                            .addComponent(txtUpdateLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbUpdateCellphone)
                            .addComponent(txtUpdateCellphone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbUpdateAddress)
                            .addComponent(txtUpdateAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbUpdateEmail)
                            .addComponent(txtUpdateEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlbValidateEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDeleteClient)
                    .addComponent(btnReturn))
                .addGap(13, 13, 13))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        FrmClientManagement frmClientMenu = new FrmClientManagement();
        frmClientMenu.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnReturnActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        ArrayList<Client> clients = new ArrayList<>();
        Gson gson = new Gson();
        String json = "";
        try {
            json = FileManager.read("data/clients.json");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error " + e.getMessage());
        }
        java.lang.reflect.Type clientType = new TypeToken<ArrayList<Client>>() {
        }.getType();
        clients = gson.fromJson(json, clientType);
        Client client = (Client) comboBoxModel.getSelectedItem();

        String[] rowClients = {client.getCedula(), client.getName(),
            client.getLastName(), client.getCellphone(), client.getAddress(),
            client.getEmail()};

        tableModel.addRow(rowClients);

        try {
            json = FileManager.read("data/clients.json");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error " + e.getMessage());
        }

        clients = gson.fromJson(json, clientType);

        txtUpdateName.setText(client.getName());
        txtUpdateLastName.setText(client.getLastName());
        txtUpdateCellphone.setText(client.getCellphone());
        txtUpdateAddress.setText(client.getAddress());
        txtUpdateEmail.setText(client.getEmail());
    }//GEN-LAST:event_btnSearchActionPerformed


    private void btnDeleteClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteClientActionPerformed
        JSONObject jsonObject = new JSONObject();
        Client client = (Client) comboBoxModel.getSelectedItem();

        JSONArray jsonArray = new JSONArray();
        Object object = null;
        JSONParser jsonParser = new JSONParser();

        try {
            FileReader fileReader = new FileReader("data/clients.json");
            object = jsonParser.parse(fileReader);
            jsonArray = (JSONArray) object;
            fileReader.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Something is wrong, an unexpected error has occurred, try again.");
        }

        int size = jsonArray.size();
        jsonObject.put("cedula", client.getCedula());
        jsonObject.put("name", client.getName());
        jsonObject.put("lastName", client.getLastName());
        jsonObject.put("cellphone", client.getCellphone());
        jsonObject.put("address", client.getAddress());
        jsonObject.put("email", client.getEmail());

        for (int i = 0; i < size; i++) {
            if (jsonObject.equals(jsonArray.get(i))) {
                try {
                    FileWriter fileWriter = new FileWriter("data/clients.json");
                    jsonArray.remove(i);
                    fileWriter.write(jsonArray.toJSONString());
                    fileWriter.close();

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Something is wrong, an unexpected error has occurred, try again.");
                }
                JOptionPane.showMessageDialog(null, "Client Removed");
                tableModel.removeRow(0);
                comboBoxModel.removeElement(client);
                break;
            } else if (i == size - 1) {
                JOptionPane.showMessageDialog(null, "Cedula was not found!");
            }
        }
    }//GEN-LAST:event_btnDeleteClientActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        String filePath = "data/clients.json";
        JSONObject jsonObject = new JSONObject();
        Client client = (Client) comboBoxModel.getSelectedItem();

        JSONArray jsonArray = new JSONArray();
        Object object = null;
        JSONParser jsonParser = new JSONParser();

        try {
            FileReader fileReader = new FileReader(filePath);
            object = jsonParser.parse(fileReader);
            jsonArray = (JSONArray) object;
            fileReader.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Something is wrong, an unexpected error has occurred, try again.");
        }

        int size = jsonArray.size();
        jsonObject.put("cedula", client.getCedula());
        jsonObject.put("name", client.getName());
        jsonObject.put("lastName", client.getLastName());
        jsonObject.put("cellphone", client.getCellphone());
        jsonObject.put("address", client.getAddress());
        jsonObject.put("email", client.getEmail());

        String email = txtUpdateEmail.getText();
        if (validateEmail(email) == true) {
            for (int i = 0; i < size; i++) {
                if (jsonObject.equals(jsonArray.get(i))) {
                    try {
                        FileWriter fileWriter = new FileWriter(filePath);
                        jsonArray.remove(i);
                        fileWriter.write(jsonArray.toJSONString());
                        fileWriter.close();
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, "Something is wrong, an unexpected error has occurred, try again.");
                    }
                    tableModel.removeRow(0);
                    break;
                } else if (i == size - 1) {
                    JOptionPane.showMessageDialog(null, "Cedula was not found!");
                }
            }

            try {
                FileReader fileReader = new FileReader(filePath);
                jsonArray = (JSONArray) jsonParser.parse(fileReader);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Error ocurred");
            }

            jsonObject.put("cedula", client.getCedula());
            jsonObject.put("name", txtUpdateName.getText());
            jsonObject.put("lastName", txtUpdateLastName.getText());
            jsonObject.put("cellphone", txtUpdateCellphone.getText());
            jsonObject.put("address", txtUpdateAddress.getText());

            jsonObject.put("email", txtUpdateEmail.getText());

            jsonArray.add(jsonObject);

            try {
                FileWriter fileWriter = new FileWriter(filePath);
                fileWriter.write(jsonArray.toJSONString());
                fileWriter.close();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Error ocurred!");
            }
            JOptionPane.showMessageDialog(null, "Client updated");
        } else {
            jlbValidateEmail.setText("Invalid Email!");
        }
       
    }//GEN-LAST:event_btnUpdateActionPerformed

    private boolean validateEmail(String email) {
        String regex = "^[\\w-_\\.+]*[\\w-_\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$";
        return email.matches(regex);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmSearchClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmSearchClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmSearchClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmSearchClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmSearchClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteClient;
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbCedula;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel jlbCedula;
    private javax.swing.JLabel jlbSearchTitle;
    private javax.swing.JLabel jlbUpdateAddress;
    private javax.swing.JLabel jlbUpdateCellphone;
    private javax.swing.JLabel jlbUpdateEmail;
    private javax.swing.JLabel jlbUpdateFields;
    private javax.swing.JLabel jlbUpdateLastName;
    private javax.swing.JLabel jlbUpdateName;
    private javax.swing.JLabel jlbValidateEmail;
    private javax.swing.JTextField txtUpdateAddress;
    private javax.swing.JTextField txtUpdateCellphone;
    private javax.swing.JTextField txtUpdateEmail;
    private javax.swing.JTextField txtUpdateLastName;
    private javax.swing.JTextField txtUpdateName;
    // End of variables declaration//GEN-END:variables
}
